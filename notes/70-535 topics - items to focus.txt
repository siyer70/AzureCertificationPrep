Design Compute Infrastructure (20-25%)
	- Design solutions using virtual machines (VMs)
		- use web app for containers (TODO)
			notes
				Advantages
					- Time to Market
					- Developer Productivity
					- Quick Updates
					- Global Scale
					- Hybrid consistency
					- Enterprise Grade Services
					- Portability
				following link covers App Service on Linux 
				https://docs.microsoft.com/en-us/azure/app-service/containers/tutorial-custom-docker-image
				https://docs.microsoft.com/en-us/azure/app-service/containers/quickstart-nodejs
				https://docs.microsoft.com/en-us/azure/app-service/containers/quickstart-java

		- design for compute-intensive tasks using Azure Batch and Azure Batch AI (TODO)
		- define a migration strategy from cloud services (migration from cloud services to service fabric) - (TODO)
			notes
				- Azure Migrate for assessment
				- Azure Site Recovery and Azure Database Migration for moving the machines to azure
		- determine when to use reserved instances (TODO)
			notes
				http://msandbu.org/microsoft-azure-reserved-instances-and-pitfalls/
		- design for VMs in a DevTest Lab environment (including formulas, images, artifacts, claiming and un-claiming VMs) - (TODO)
		- determine when to use Accelerated Networking (TODO)
			notes
				https://docs.microsoft.com/en-us/azure/virtual-network/create-vm-accelerated-networking-cli
		- recommend use of Azure Backup and Azure Site Recovery including support for Linux in Azure Backup and integrating Azure Backup in the VM creation process (TODO)
		- recommend when to use availability zones	(TODO)
	- Design solutions for serverless computing (TODO)
		- Use Azure Functions to implement event-driven actions
		- design data storage solutions for serverless computing
		- design for serverless computing using Azure Container Instances
		- design application solutions by using Azure Logic Apps, Azure Functions, or both
		- determine when to use API management service
		- design event routing solutions using Azure Event Grid
		- design solutions that integrate stream processing and bot messaging	
	- Design microservices-based solutions (TODO)
		- Determine when a container-based solution is appropriate
			notes
				It is appropriate
				- when you are creating app with a micro service architecture
				- when Implementing DEVOPS practices (containers provide infrastructure as code)
				- when you desire 100% compatibility across on-premise, Azure and other cloud providers (containers run the same regardless)
				- for Agile delivery environments
		- determine when container-orchestration is appropriate
			notes
				- The task of automating and managing large number of containers and how they interact is known as Orchestration
				- It provides service such as 
					- Coordinated Deployments
					- Load Balancing
					- Automated FailOver
				- It is appropriate
					- in a multi-container situation with support for self healing scenarios (monitoring containers and restarting it when needed)
					- in a multi-container situation with support for horizontal scaling without administrator intervention
					- in a multi-container and multi-tiered applications, to scale at different times or based on some criteria
					- for load balancing multiple containers across a single DNS name
					- for container migrations or deployments
					- for applications that use microservice architecture
				- Simply, you need an Orchestrator, 
					- if you need to perform an action based on multiple containers
					- or work with applications having mulit-container architectures
		- determine when Azure Service Fabric (ASF) is appropriate
			notes
				- It is a distributed system platform that makes it easy to package, deploy and manage scalable and reliable microservices & containers.
				- It is ideal when orchestrating and deploying microservices in containers across a cluster of machines
				- It provides ultra-fast, highly available and scalable application fabric  
		- determine when Azure Functions is appropriate
			notes
				- It is most appropriate when
					- you want to run snippets of code
					- you want to use serverless infrastrcuture to run code snippets
					- integrate with third party apps
					- or run apps like Logic Apps
		- determine when to use API management service
			notes
				- Think of API Management as API Store
				- Use it
					- when you want to standardize how and when your developers use APIs
						- especially, if you dont have a great model for managing and streamlining the use of APIs
					- when you need a central repository for API Management
					- when you want to add, test, rollout or rollback API access for internal or external users
					- when you want to deploy an easy to use and fully authenticated portal for developers to use to request access to APIs
					- when you want to fully document APIs, their connection and call details and other details that can be easily provided to developers
					- when you want to monitor any aspect of API including
						- availability
						- performance
						- deep insights
						- request and response
				- In addition to managing your own APIs, you can also use it manage third party APIs that are used by your developers
				- You can gate access using API keys and applying advanced security policies (regardless where it is running)
		- determine when Web API is appropriate
			notes
			- Web API defines the resources, relationships, and navigation schemes accessible to client applications.
			use it
				- when you want to expose using REST actions of a web app. 
				- Some of these actions may include GET, POST, PUT, DELETE, or any other functions including custom functions. 

				- when you want to directly monitor your API. This includes availability, performance, usage data, and deep applications insights. 
				- Monitoring can also track information about requests, responses and more.				
			Web API is appropriate 
				- when you need these capabilities and you want to maintain responsiveness, scalability and availability across the requests.
		- determine which platform is appropriate for container orchestration
		- consider migrating existing assets versus cloud native deployment
		- design lifecycle management strategies
	- Design web applications
		- design custom web API (TODO)
		- secure Web API (TODO)
		- design for high availability using Azure Web Apps in multiple regions (TODO)
		- determine which App service plan to use (TODO)
		- design Web Apps for business continuity (TODO)
		- determine when to use Azure App Service Isolated (TODO)
		- determine when to use Web Apps on Linux (TODO)
		- determine when to use a CDN (HANDS-ON)
	- Create compute-intensive applications (TODO)
		- Design high-performance computing (HPC) and other compute-intensive applications using Azure Services
		- determine when to use Azure Batch 
		- design stateless components to accommodate scale
		- design lifecycle strategy for Azure Batch
		- design solution that implement low priority batching and job task counting

Design Data Implementation (15-20%)
	- Design for Azure Storage Solutions
		- Determine when to use 
			- Azure Data Box (TODO)
			- Azure StorSimple (TODO)		
	- Design for Azure Data Services (TODO)
		- Determine when to use 
			- Azure Data Catalog 
			notes
				- by providing a central store for data consumers and data creators that make data sources discoverable and understandable for those users that 
				need to work with them. 
				- These cloud services allow you to register a data source by copying to the Data Catalog 
					- data sourceâ€™s metadata 
					- and also to a reference to its location.
				- You can also attach documentation and requesting procedures.
				- Two different types of metadata a) Structural (columns & types) and Descriptive (descriptions and tags)
				- user needs to be a member of the Azure Active Directory associated with your subscription.
				Steps
					- sign in to (https://www.azuredatacatalog.com)
					- select "Publish" button on the upper-right corner
					- In the "Publish your data now!" page, click on Launch Application button
					- This will download "Azure Data Catalog" Application for registering your data source
					- After installing and running, sign in using your active directory account
					- Select the data source type that you want to register and click next (for ex: Azure Blob)
					- Provide the details associated with data source type - for Azure Blob: 
						- Account name and access key 
						- select the blob(s)
			- Azure Data Factory 
			- Azure SQL Data Warehouse 
			- Azure Data Lake Analytics 
			- Azure Analysis Services 
			- Azure HDInsight
	- Design for relational database storage
		- Determine when to use 
			- SQL Server Stretch Database (TODO)
			notes
				https://docs.microsoft.com/en-us/sql/sql-server/stretch-database/stretch-database?view=sql-server-2017
		- design for scalability and features (TODO)
		- determine when to use Azure Database for MySQL and Azure Database for PostgreSQL (TODO)
		- design for HA/DR, geo-replication (REVISE)
		- design a backup and recovery strategy (REVISE)
		- design optimization strategies for Azure SQL Data Warehouse columnar storage (TODO)
	- Design for NOSQL Storage
		- Determine when to use 
			- Azure Data Lake (TODO)
			- Time Series Insights (TODO)
		- design pipelines for managing recurring jobs (TODO)
	- Design for CosmosDB Storage
		- Determine when to use  (HANDS-ON)
			- MongoDB API 
			- Azure Cosmos DB SQL API
			- Graph API
			- Azure Tables API
			- design for cost, performance, data consistency, availability, and business continuity

Design Networking Implementation (15-20%)
	- Design Azure virtual networks
		- Design solutions that use Azure networking services: 
			- define DNS, DHCP, and IP strategies (TODO)
			- determine when to use virtual network (VNet) service endpoints (TODO)
			- determine when to use 
				- Multi-node application gateways (TODO)
	- Design external connectivity for Azure Virtual Networks (TODO)
		- Determine when to use 
			- Azure VPN
			- Azure ExpressRoute 
			- Virtual Network Peering architecture and design
		- determine when to use User Defined Routes (UDRs)
		- determine when to use VPN gateway site-to-site failover for ExpressRoute
		- determine when to use the Container Networking Interface (CNI) plugin 
		- design solutions that use Global VNet Peering
	- Design security strategies (TODO)
		- Determine when to use network virtual appliances
		- design a perimeter network (DMZ)
		- determine when to use a Web Application Firewall (WAF), Network Security Group (NSG), and virtual network service tunneling
		- organize resources by designing solutions that use service tags
	- Design connectivity for hybrid applications (TODO)
		- Design connectivity to 
			- on-premises data from Azure applications using Azure Relay Service
			- Azure Data Management Gateway for Data Factory
			- Azure On-Premises Data Gateway
			- Hybrid Connections or Azure Web Appâ€™s virtual private network (VPN) capability
		- identify constraints for connectivity with VPN
		- identify options for joining VMs to domains		

Design Security and Identity Solutions (20-25%)
	- Design an identity solution
		- determine when to use Azure AD Domain Services (TODO)
		- design security for Mobile Apps using AAD (TODO)
	- Secure resources by using identity providers
		- Design solutions that use external or consumer identity providers such as Microsoft account, Facebook, Google, and Yahoo (REVISE)
		- design mobile apps using AAD B2C or AAD B2B (TODO)
	- Design a data security solution
		- determine when to use (HANDS-ON)
			- Azure Storage encryption
			- Azure Disk Encryption
			- Azure SQL Database security capabilities
			- Azure Key Vault
	- Design a mechanism of governance and policies for administering Azure resources
		- define an Azure RBAC strategy (TODO)
		- determine when to use Azure resource policies (TODO)
		- determine when to use Azure AD Privileged Identity Management (TODO)
		- determine when to use HSM-backed keys (TODO)
	- Manage security risks by using an appropriate security solution (TODO)
		- Identify, assess, and mitigate security risks by using 
			- Azure Security Center (HANDS-ON)
			- Operations Management Suite Security and Audit solutions, and other services (HANDS-ON)
		- determine when to use Azure AD Identity Protection
		- determine when to use Advanced Threat Detection
		- determine an appropriate endpoint protection strategy

Design Solutions by using Platform Services (10-15%)
	- Design for Artificial Intelligence Services (TODO)
		- Determine when to use 
			- the appropriate Cognitive Services, 
			- Azure Bot Service
			- Azure Machine Learning
			- and other categories that fall under cognitive AI
	- Design for IoT (TODO)
		- Determine when to use 
			- Azure Stream Analytics
			- Azure IoT Hubs
			- Azure Event Hubs
			- real-time analytics
			- Azure Time Series Insights
			- Azure IoT Edge
			- Azure Notification Hubs
			- Event Grid
			- and other services that fall under IoT
	- Design messaging solution architectures (TODO)
		- Design a messaging architecture
		- determine when to use Azure Storage Queues, Azure Service Bus, Azure Event Hubs, Azure Event Grid, Azure Relay, Azure Functions, and Azure Logic Apps
		- design a push notification strategy for Mobile Apps
		- design for performance and scale
	- Design for media service solutions (TODO)
		- Define solutions using Azure Media Services, video indexer, video API, computer vision API, preview, and other media related services
		- design solutions that use file-based encoding or Azure Media Analytics

Design for Operations (10-15%)
	- Design an application monitoring and alerting strategy (HANDS-ON)
		- Determine the appropriate Microsoft products and services for monitoring applications on Azure
		- define solutions for analyzing logs and enabling alerts using Azure Log Analytics
		- define solutions for analyzing performance metrics and enabling alerts using Azure Monitor
		- define a solution for monitoring applications and enabling alerts using Application Insights	
	- Design a platform monitoring and alerting strategy (TODO)
		- Determine the appropriate Microsoft products and services for monitoring Azure platform solutions
		- define a monitoring solution using Azure Health, Azure Advisor, and Activity Log (TODO)
		- define a monitoring solution for Azure Networks using Log Analytics and Network Watcher service (TODO)
		- monitor security with Azure Security Center (TODO)
		- design TCP connections (TODO)
	- Design an operations automation strategy
		- Determine when to use 
			- Chef (TODO)
			- Puppet (TODO)
			- Azure Automation (DSC) (HANDS-ON)
			- Event Grid and Azure Logic Apps
		- define a strategy for enabling periodic processes and tasks (TODO)
		- define an update management strategy (TODO)

